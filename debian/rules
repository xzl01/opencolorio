#!/usr/bin/make -f

export DH_OPTIONS
export DEB_BUILD_MAINT_OPTIONS = hardening=+all
export LDFLAGS = $(shell dpkg-buildflags --get LDFLAGS)
CXXFLAGS = $(shell dpkg-buildflags --get CXXFLAGS)
CPPFLAGS = $(shell dpkg-buildflags --get CPPFLAGS)
DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)
BLDDIR = debian/cmake
INSTDIR = debian/tmp

%:
	dh $@ -Scmake -B$(BLDDIR) --with python3

override_dh_auto_clean:
	dh_auto_clean
	# temporary hack until the Findyaml-cpp.cmake is patched by upstream to work with newer yaml-cpp.
	# in any case, the one provided by libyaml-cpp-dev works correctly
	rm -f share/cmake/modules/Findyaml-cpp.cmake

override_dh_auto_configure:
	dh_auto_configure -- \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_CXX_FLAGS="$(CXXFLAGS) $(CPPFLAGS)" \
		-DCMAKE_CXX_STANDARD=17 \
		-DCMAKE_INSTALL_MESSAGE="ALWAYS" \
		-DCMAKE_SKIP_RPATH=ON \
		-DOCIO_BUILD_NUKE=OFF \
		-DOCIO_BUILD_STATIC=OFF \
		-DOCIO_BUILD_TESTS=OFF \
		-DOCIO_INSTALL_EXT_PACKAGES=NONE \
		-DOCIO_USE_SSE=OFF \
		-Dpystring_INCLUDE_DIR:PATH="/usr/include"

override_dh_auto_install:
	dh_auto_install
	rm -f $(INSTDIR)/usr/share/ocio/setup_ocio.sh
	rm -f $(INSTDIR)/usr/lib/$(DEB_HOST_MULTIARCH)/lib*.a

override_dh_install:
	mkdir -p debian/tmp/usr/include/PyOpenColorIO
	cp src/bindings/python/PyOpenColorIO.h debian/tmp/usr/include/PyOpenColorIO/
	dh_install

override_dh_auto_test:
